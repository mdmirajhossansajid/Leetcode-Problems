https://leetcode.com/problems/invert-binary-tree/description/

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        queue<TreeNode*>q;
        if(root)
         q.push(root);
        while(!q.empty())
        {
            TreeNode* node=q.front();
            q.pop();
            swap(node->left,node->right); /****swap left and right children**//
            if(node->left)
              q.push(node->left);
            if(node->right)
                q.push(node->right);            
        }
        return root;  
    }
};


recursive way

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root == NULL)
            return root;
        
        swap(root->left, root->right);
        invertTree(root->left);
        invertTree(root->right);
        return root;
    }
};
